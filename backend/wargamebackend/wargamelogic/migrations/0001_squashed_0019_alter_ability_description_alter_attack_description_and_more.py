# Generated by Django 5.2.4 on 2025-08-19 14:43

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('wargamelogic', '0001_initial'), ('wargamelogic', '0002_rename_supply_space_unit_max_supply_space_and_more'), ('wargamelogic', '0003_rename_tileinstance_landmarkinstancetile_and_more'), ('wargamelogic', '0004_remove_attack_cost_and_more'), ('wargamelogic', '0005_remove_roleinstance_unique_role_per_team'), ('wargamelogic', '0006_remove_unit_cost_attack_cost'), ('wargamelogic', '0007_gameinstance'), ('wargamelogic', '0008_remove_landmarkinstance_team_and_more'), ('wargamelogic', '0009_alter_ability_unique_together_and_more'), ('wargamelogic', '0010_unit_branch_unit_is_logistic_alter_unit_domain_and_more'), ('wargamelogic', '0011_alter_roleinstance_user_and_more'), ('wargamelogic', '0012_alter_roleinstance_supply_points'), ('wargamelogic', '0013_alter_teaminstance_victory_points'), ('wargamelogic', '0014_remove_role_access_level_role_branch_and_more'), ('wargamelogic', '0015_branch_remove_role_branch_unit_cost_unitbranch'), ('wargamelogic', '0016_remove_unit_branch_role_branch'), ('wargamelogic', '0017_alter_role_branch'), ('wargamelogic', '0018_unit_branches'), ('wargamelogic', '0019_alter_ability_description_alter_attack_description_and_more')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Landmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('City', 'City'), ('Port', 'Port'), ('Ground Base', 'Ground Base'), ('Airfield', 'Airfield'), ('Supply Node', 'Supply Node'), ('Stockpile', 'Stockpile')], max_length=100, unique=True)),
                ('max_victory_points', models.FloatField()),
                ('can_repair', models.BooleanField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('access_level', models.CharField(choices=[('Strategic', 'Strategic'), ('Operational', 'Operational'), ('Tactical', 'Tactical')], max_length=20)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('domain', models.CharField(choices=[('Ground', 'Ground'), ('Air', 'Air'), ('Sea', 'Sea'), ('Logistic', 'Logistic')], max_length=20)),
                ('type', models.CharField(choices=[('Light', 'Light'), ('Medium', 'Medium'), ('Heavy', 'Heavy')], max_length=20)),
                ('max_health', models.FloatField()),
                ('speed', models.FloatField()),
                ('max_supply_space', models.FloatField()),
                ('defense_modifier', models.FloatField()),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='LandmarkInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('victory_points', models.FloatField()),
                ('landmark', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wargamelogic.landmark')),
            ],
        ),
        migrations.CreateModel(
            name='Tile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row', models.IntegerField()),
                ('column', models.IntegerField()),
                ('terrain', models.CharField(choices=[('Ocean', 'Ocean'), ('Forest', 'Forest'), ('Jungle/Swamp', 'Jungle/Swamp'), ('Plains/Grasslands', 'Plains/Grasslands'), ('Mountain', 'Mountain'), ('Desert', 'Desert'), ('Urban', 'Urban'), ('Road', 'Road')], max_length=30)),
            ],
            options={
                'unique_together': set(),
            },
        ),
        migrations.CreateModel(
            name='LandmarkInstanceTile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('landmark_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wargamelogic.landmarkinstance')),
                ('tile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wargamelogic.tile')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('tile', 'landmark_instance'), name='unique_tile_landmark_pair')],
            },
        ),
        migrations.CreateModel(
            name='GameInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('join_code', models.CharField(max_length=20, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AddField(
            model_name='landmarkinstance',
            name='game_instance',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='wargamelogic.gameinstance'),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='TeamInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('victory_points', models.FloatField()),
                ('game_instance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wargamelogic.gameinstance')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wargamelogic.team')),
            ],
        ),
        migrations.AddField(
            model_name='landmarkinstance',
            name='team_instance',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='wargamelogic.teaminstance'),
        ),
        migrations.CreateModel(
            name='RoleInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.CharField(max_length=255)),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wargamelogic.role')),
                ('supply_points', models.FloatField(default=0)),
                ('team_instance', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='wargamelogic.teaminstance')),
            ],
            options={
                'constraints': [],
            },
        ),
        migrations.CreateModel(
            name='UnitInstance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('health', models.FloatField()),
                ('tile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wargamelogic.tile')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wargamelogic.unit')),
                ('supply_count', models.FloatField(default=0)),
                ('team_instance', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='wargamelogic.teaminstance')),
            ],
        ),
        migrations.CreateModel(
            name='Ability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='abilities', to='wargamelogic.unit')),
            ],
            options={
                'unique_together': set(),
                'constraints': [models.UniqueConstraint(fields=('unit', 'name'), name='unique_unit_ability_pair')],
            },
        ),
        migrations.CreateModel(
            name='Attack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('to_hit', models.FloatField()),
                ('shots', models.IntegerField()),
                ('min_damage', models.FloatField()),
                ('max_damage', models.FloatField()),
                ('range', models.FloatField()),
                ('type', models.CharField(choices=[('Light', 'Light'), ('Medium', 'Medium'), ('Heavy', 'Heavy'), ('Structure', 'Structure')], max_length=20)),
                ('attack_modifier', models.FloatField()),
                ('attack_modifier_applies_to', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attacks', to='wargamelogic.unit')),
                ('cost', models.FloatField(default=25)),
            ],
            options={
                'unique_together': set(),
                'constraints': [models.UniqueConstraint(fields=('unit', 'name'), name='unique_unit_attack_pair')],
            },
        ),
        migrations.AddConstraint(
            model_name='teaminstance',
            constraint=models.UniqueConstraint(fields=('game_instance', 'team'), name='unique_game_team_pair'),
        ),
        migrations.AddConstraint(
            model_name='tile',
            constraint=models.UniqueConstraint(fields=('row', 'column'), name='unique_row_column_pair'),
        ),
        migrations.AddField(
            model_name='unit',
            name='branch',
            field=models.CharField(choices=[('Air Force', 'Air Force'), ('Army', 'Army'), ('Navy', 'Navy')], default='Air Force', max_length=20),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='unit',
            name='is_logistic',
            field=models.BooleanField(default=False),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='unit',
            name='domain',
            field=models.CharField(choices=[('Ground', 'Ground'), ('Air', 'Air'), ('Sea', 'Sea')], max_length=20),
        ),
        migrations.AlterField(
            model_name='unit',
            name='type',
            field=models.CharField(choices=[('Light', 'Light'), ('Medium', 'Medium'), ('Heavy', 'Heavy'), ('Structure', 'Structure')], max_length=20),
        ),
        migrations.AlterField(
            model_name='roleinstance',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='roleinstance',
            constraint=models.UniqueConstraint(fields=('team_instance', 'user'), name='unique_team_user_pair'),
        ),
        migrations.AlterField(
            model_name='roleinstance',
            name='supply_points',
            field=models.FloatField(default=0),
        ),
        migrations.AlterField(
            model_name='teaminstance',
            name='victory_points',
            field=models.FloatField(default=0),
        ),
        migrations.RemoveField(
            model_name='role',
            name='access_level',
        ),
        migrations.AddField(
            model_name='role',
            name='is_chief_of_staff',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='role',
            name='is_commander',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='role',
            name='is_logistics',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='role',
            name='is_operations',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='role',
            name='is_vice_commander',
            field=models.BooleanField(default=False),
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='unit',
            name='cost',
            field=models.FloatField(default=0),
            preserve_default=False,
        ),
        migrations.CreateModel(
            name='UnitBranch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wargamelogic.branch')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='wargamelogic.unit')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('unit', 'branch'), name='unique_unit_branch')],
            },
        ),
        migrations.RemoveField(
            model_name='unit',
            name='branch',
        ),
        migrations.AddField(
            model_name='role',
            name='branch',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='wargamelogic.branch'),
        ),
        migrations.AddField(
            model_name='unit',
            name='branches',
            field=models.ManyToManyField(through='wargamelogic.UnitBranch', to='wargamelogic.branch'),
        ),
        migrations.AlterField(
            model_name='ability',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='attack',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='landmark',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='role',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='unit',
            name='description',
            field=models.TextField(blank=True),
        ),
    ]
